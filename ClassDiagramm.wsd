skinparam classAttributeIconSize 0
@startuml smartHome

class Validator{
    +static isValueString(object) : bool,
    +static isValueBoolean(object) : bool,
    +static isValueNumber(object) : bool,
    +static isValueArray(object) : bool,
    +static isLocationValid(object) : bool,
    +static isPositionValid(object) : bool,
    +static isDeviceValid(object) : bool
}

class ChannelReciver{
    +Constructor(Map,[number, string]),
    -Map channelList, 
    -[number, string] currentChannel,
    -[] psevdoChannelList,
    -number psevdoCurrentCnannel,
    -getArrFromMapKeys() : [],
    -channelUp() :void,
    -channelDown() : void,
    +setChannel(number) : void, 
    +getChannel() : number,
    +getChannelList() : string
}

class Regulator{
    +Constructor(number, number, number),
    -number min,
    -number max,
    -number currentValue,
    +getMinMax() : [],
    +setCurrentValue(number) : void,
    +getCurrentValue() : string, 
    +currentValueUp() : void,
    +currentValueDown() : void
}


abstract class Device{
    +static generateID(): number,
    +Constructor(string, bool, bool, Set)
    #string brand,
    #bool power,
    #bool onlineStatus,
    #Set avialableSSID,
    #number iD,
    +getBrand() : string,
    +getPower() : bool,
    +getAviableSSID(): string,
    +getOnlineStatus() : bool,
    +powerOn() :void,
    +powerOff() :void,
    #addAviableSSID(string): void,
    +connectToWiFi(string) : Promise,
    +timerForPower(number, bool) : void,
    +toString() : string
}

abstract class SoundDevice{
    +Constructor(string, bool, bool, Set, Regulator),
    #string brand,
    #bool power,
    #bool onlineStatus,
    #Set avialableSSID,
    #Regulator volumeLevel,
    #number iD,
    +getBrand() : string,
    +getPower() : bool,
    +getAviableSSID(): string,
    +getOnlineStatus() : bool,
    +powerOn() :void,
    +powerOff() :void,
    +addAviableSSID(string): void,
    +connectToWiFi(string) : Promise,
    +timerForPower(number, bool) : void,
    +volumeUp() : void,
    +volumeDown() : void,
    +setVolume(number) : void, 
    +getVolume() : number,
    +toString() : string
}

class Mp3Player{
     +Constructor(string, bool, bool, Set, Regulator, string, [string], number),
    #string brand,
    #bool power,
    #bool onlineStatus,
    #Set avialableSSID,
    #Regulator volumeLevel,
    #number iD,
    #number currentTrack,
    #string diskName,
    #[string] disk,
    +getBrand() : string,
    +getPower() : bool,
    +getAviableSSID(): string,
    +getOnlineStatus() : bool,
    +powerOn() :void,
    +powerOff() :void,
    +addAviableSSID(string): void,
    +connectToWiFi(string) : Promise,
    +timerForPower(number, bool) : void,
    +volumeUp() : void,
    +volumeDown() : void,
    +setVolume(number) : void, 
    +getVolume() : number,    
    +getTrack() : number,
    +setTrack(number): void,
    +getDisk() : [string],
    +setDisk([string]): void,
    +nextTrack(): void,
    +previousTrack(): void,
    +toString() : string
}

class TV{
    +Constructor(string, bool, bool, Set, Regulator, ChannelReciver),
    #string brand,
    #bool power,
    #bool onlineStatus,
    #Set avialableSSID,
    #Regulator volumeLevel,
    #number iD,
    #ChannelReciver currentChannel
    +getBrand() : string,
    +getPower() : bool,
    +getAviableSSID(): string,
    +getOnlineStatus() : bool,
    +powerOn() :void,
    +powerOff() :void,
    +addAviableSSID(string): void,
    +connectToWiFi(string) : Promise,
    +timerForPower(number, bool) : void,
    +volumeUp() : void,
    +volumeDown() : void,
    +setVolume(number) : void, 
    +getVolume() : number,
    +nextChannel() : void,
    +previousChannel() : void,
    +setChannel(number) : void,
    +getChannelList(): string,
    +getChannel(): number,
    +toString() : string

}

class OpenControler{
    +static generateID(): number,
    +Constructor(string, bool, bool, Set, string, [string])
    #string brand,
    #bool power,
    #bool onlineStatus,
    #Set avialableSSID,
    #number iD,
    #string position,
    #[string] aviablePosition,
    +getBrand() : string,
    +getPower() : bool,
    +getAviableSSID(): string,
    +getOnlineStatus() : bool,
    +powerOn() :void,
    +powerOff() :void,
    +addAviableSSID(string): void,
    +connectToWiFi(string) : Promise,
    +timerForPower(number, bool) : void,
    +toString() : string
}


class WiFiRouter{
    +static generateID(): number,
    +Constructor(string, bool, bool, Set, string, Set, bool, string, Set)
    #string brand,
    #bool power,
    #bool onlineStatus,
    #Set avialableSSID,
    #number iD,
    #bool internetConnection,
    #string sSSID,
    #connectedDevices,    
    +getBrand() : string,
    +getPower() : bool,
    +getAviableSSID(): string,
    +getOnlineStatus() : bool,
    +powerOn() :void,
    +powerOff() :void,
    +addAviableSSID(string): void,
    +connectToWiFi(string) : Promise,
    +timerForPower(number, bool) : void,
    +setInternetConnection(string):promise,
    +getInternetConnection(): bool,
    +getConnectedDevices(): Set,
    +addDevice(device): void,
    +toString() : string
}

class SmartHome{
    +Constructor(const, Map),
    -string locations,
    -Map aviableDevices,
    +addDevice(string, Device): void,
    +getDeviceByID(number): Device,
    +removeDevice(Device): void,
    +removeDeviceByID(ID): void,
    +searchByLocation() : [],
    +searchByClassName(): [],
    +controlByLocation([]) : void,
    +controlByByClassName([]) : void,
    +toString() : string,

    
    provideWiFI(),
    Addition–∞lToWiFi()

}

Device <|-- SoundDevice
Device <|-- WiFiRouter
Device <|-- OpenControler
Device <|-- LightDevice
Device <|-- TemperatureDevice


SoundDevice <|-- TV
SoundDevice <|-- Mp3Player

LightDevice <|-- LedClock
TemperatureDevice <|-- Conditioner

ChannelReciver o-- TV
Regulator <--> SoundDevice
Validator o-- Device
Validator o-- SoundDevice
Validator o-- TV


Validator o-- SmartHome

@enduml